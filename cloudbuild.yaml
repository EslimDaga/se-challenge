steps:
  # Step 1: Install dependencies and run tests
  - name: 'python:3.11-slim'
    id: 'test'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y gcc g++ pkg-config default-libmysqlclient-dev
        pip install -r requirements.txt

        # Run linting (continue on failure)
        pip install flake8 black isort
        echo "Running code formatting checks..."
        black --check app/ || echo "⚠️ Black formatting issues found, continuing..."
        isort --check-only app/ || echo "⚠️ Import sorting issues found, continuing..."
        flake8 app/ --max-line-length=88 --extend-ignore=E203,W503 || echo "⚠️ Flake8 issues found, continuing..."

        # Run tests (continue on failure for deployment)
        echo "Running tests..."
        pytest app/tests/ -v --tb=short || echo "⚠️ Some tests failed, continuing with deployment..."

        echo "✅ Build checks completed!"

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args:
      - 'build'
      - '--target'
      - 'production'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/se-challenge/user-management-api:$BUILD_ID'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/se-challenge/user-management-api:latest'
      - '.'
    waitFor: ['test']

  # Step 3: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/se-challenge/user-management-api'
    waitFor: ['build']

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'user-management-api'
      - '--image'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/se-challenge/user-management-api:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--service-account'
      - '${_SERVICE_ACCOUNT_EMAIL}'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'
      - '--update-secrets'
      - 'DATABASE_URL=database-url:latest,MYSQL_USER=mysql-user:latest,MYSQL_PASSWORD=mysql-password:latest,MYSQL_HOST=mysql-host:latest,MYSQL_PORT=mysql-port:latest,MYSQL_DATABASE=mysql-database:latest'
      - '--set-env-vars'
      - 'ENVIRONMENT=production'
      - '--labels'
      - 'environment=production,version=$BUILD_ID'
    waitFor: ['push']

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'

# Build timeout
timeout: '1200s'

# Substitutions
substitutions:
  _REPOSITORY: 'se-challenge'
  _SERVICE_ACCOUNT_EMAIL: 'user-management-sa@${PROJECT_ID}.iam.gserviceaccount.com'

# Images to be stored in Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/se-challenge/user-management-api:$BUILD_ID'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/se-challenge/user-management-api:latest'